{"version":3,"file":"rollup-bundle.js","sources":["../src/States/Boot.ts","../src/States/Preloader.ts","../src/States/Player.ts","../src/States/Enemy1.ts","../src/States/Debug.ts","../src/Game.ts"],"sourcesContent":["export class Boot extends Phaser.State {\r\n    public preload() {\r\n        // this.load.image(\"preloadBar\", \"./assets/startbar.png\");\r\n        // this.load.image(\"preloadBarBg\", \"./assets/prloadBar.png\");\r\n    }\r\n\r\n    public create() {\r\n        this.input.maxPointers = 1;\r\n        this.stage.disableVisibilityChange = true;\r\n\r\n        this.scale.pageAlignHorizontally = true;\r\n        this.scale.pageAlignVertically = true;\r\n        console.log(this.scale.width);\r\n        this.scale.scaleMode = Phaser.ScaleManager.NO_SCALE;\r\n\r\n        console.log(this.game);\r\n        this.game.state.start(\"Preloader\", true, false);\r\n    }\r\n}\r\n","export class Preloader extends Phaser.State {\r\n    public preload() {\r\n        // var bgg = this.game.add.sprite(148,  250, \"preloadBarBg\");\r\n        // this.preloadBar = this.game.add.sprite(148,  250, \"preloadBar\");\r\n\r\n        // this.load.setPreloadSprite(this.preloadBar);\r\n        // this.load.spritesheet(\"cryopod\", \"./assets/cryopod.png\", 25, 80);\r\n        // this.load.audio(\"first\", \"./assets/sound/first.mp3\");\r\n        // this.load.tilemap('map', 'assets/Tile maps/Nova90.json', null, Phaser.Tilemap.TILED_JSON);\r\n        this.load.tilemap(\"debug\", \"assets/debug-map.json\", null, Phaser.Tilemap.TILED_JSON);\r\n        this.load.image(\"debug-player\", \"assets/debug-player.png\");\r\n        this.load.image(\"debug-tileset\", \"assets/Tiles.png\");\r\n        this.load.spritesheet(\"playerSpritesheet\", \"assets/player.png\", 20, 32, 12);\r\n        this.load.image(\"enemySight\", \"assets/enemySight.png\");\r\n    }\r\n\r\n    public create() {\r\n        // this.add.tween(this.preloadBar).to({alpha: 0}, 1000, Phaser.Easing.Linear.None, true).onComplete.add(() => {\r\n        //     this.game.state.start(\"titleScreen\", true, false));\r\n        // }\r\n        this.game.renderer.renderSession.roundPixels = true        \r\n        this.game.state.start(\"Debug\");\r\n    }\r\n}\r\n","import { Enemy1 } from \"./Enemy1\"\r\nexport class Player extends Phaser.Sprite {\r\n    static speed: number = 192;\r\n    private lastKey: number;\r\n    private enemy1: Enemy1;    \r\n    constructor(game: Phaser.Game, x: number, y: number) {\r\n        super(game, x, y, \"playerSpritesheet\", 0);\r\n        this.anchor.setTo(0.5, 0);\r\n        this.animations.add('upAnim', [3,4,5], 5, true);\r\n        this.animations.add('upIdle', [3], 5, true);\r\n        this.animations.add('downAnim', [0,1,2], 5, true);\r\n        this.animations.add('downIdle', [0], 5, true);\r\n        this.animations.add('leftAnim', [9,10,11], 5, true);\r\n        this.animations.add('leftIdle', [9], 5, true);\r\n        this.animations.add('rightAnim', [6,7,8], 5, true);\r\n        this.animations.add('rightIdle', [6], 5, true);\r\n        game.physics.enable(this);\r\n        this.body.collideWorldBounds = true;\r\n        game.camera.follow(this);\r\n\r\n        game.add.existing(this);\r\n        this.lastKey = 2;\r\n        console.log(\"running\");\r\n    }\r\n\r\n    update() {\r\n        this.game.physics.arcade.collide(this, (this.game.state.getCurrentState() as any).walls);\r\n        this.game.physics.arcade.collide(this, (this.game.state.getCurrentState() as any).enemy1);\r\n        let velocity = this.body.velocity;\r\n        velocity.set(0);\r\n        \r\n        if (this.game.input.keyboard.isDown(Phaser.Keyboard.UP)) {\r\n            velocity.y -= Player.speed;\r\n            this.play(\"upAnim\");\r\n            this.lastKey = 1;\r\n        }\r\n        else if (this.game.input.keyboard.isDown(Phaser.Keyboard.DOWN)) {\r\n            velocity.y += Player.speed;\r\n            this.play(\"downAnim\");\r\n            this.lastKey = 2;\r\n        }\r\n        else if (this.game.input.keyboard.isDown(Phaser.Keyboard.LEFT)) {\r\n            velocity.x -= Player.speed;\r\n            this.play(\"leftAnim\");\r\n            this.lastKey = 3;\r\n        }\r\n        else if (this.game.input.keyboard.isDown(Phaser.Keyboard.RIGHT)) {\r\n            velocity.x += Player.speed;\r\n            this.play(\"rightAnim\");\r\n            this.lastKey = 4;\r\n        }\r\n        else {\r\n            this.animations.stop();\r\n        }\r\n    }\r\n}","export class Enemy1 extends Phaser.Sprite {\r\n    static speed: number = 192;\r\n    private lastKey: number;\r\n    constructor(game: Phaser.Game, x: number, y: number) {\r\n        super(game, x, y, \"debug-player\", 0);\r\n        this.anchor.setTo(0.5, 0);\r\n        game.physics.enable(this);\r\n        this.body.collideWorldBounds = true;\r\n        this.body.immovable = true;\r\n        game.add.existing(this);\r\n    }\r\n\r\n    update() {\r\n    }\r\n}","import { Player } from \"./Player\"\r\nimport { Enemy1 } from \"./Enemy1\"\r\nexport class Debug extends Phaser.State {\r\n    private cursors: Phaser.CursorKeys;\r\n    private player: Player;\r\n    private enemy1: Enemy1;\r\n    private enemy1Sight: Phaser.Sprite;\r\n    private background: Phaser.TilemapLayer;\r\n    private walls: Phaser.TilemapLayer;\r\n    // pSpawn: Phaser.Group;\r\n\r\n    public preload() {\r\n        \r\n    }\r\n\r\n    public create() {\r\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\r\n\r\n        let map = this.game.add.tilemap(\"debug\");\r\n        map.addTilesetImage(\"placeHolder\", \"debug-tileset\");\r\n\r\n        this.background = map.createLayer(\"Background\");\r\n        this.walls = map.createLayer(\"Walls\");\r\n        this.walls.resizeWorld();\r\n        map.setCollision(1, true, \"Walls\");\r\n        this.game.physics.enable(this.walls);\r\n        this.player =new Player(this.game, 64, 96);\r\n        this.enemy1 = new Enemy1(this.game, 208, 512);\r\n        this.enemy1Sight = this.game.add.sprite(32, 528, \"enemySight\");\r\n        this.enemy1Sight.renderable = false;\r\n    }\r\n\r\n    public update() {\r\n        if (this.checkOverlap(this.player, this.enemy1Sight)) {\r\n            console.log(\"Collision\");\r\n        }\r\n\r\n    }\r\n\r\n    public checkOverlap(A, B) {\r\n        var boundsA = A.getBounds();\r\n        var boundsB = B.getBounds();\r\n    \r\n        return Phaser.Rectangle.intersects(boundsA, boundsB);\r\n    }\r\n}\r\n","import * as States from \"./States\";\r\n\r\nclass Game extends Phaser.Game {\r\n    constructor() {\r\n        super(800, 600, Phaser.AUTO, \"\");\r\n        this.antialias = false;\r\n        this.state.add(\"Preloader\", States.Preloader);\r\n        this.state.add(\"Debug\", States.Debug);\r\n        this.state.add(\"Boot\", States.Boot, true);\r\n        this.state.start(\"Boot\");\r\n    }\r\n}\r\n\r\n(window as any).game = new Game();\r\n"],"names":["tslib_1.__extends","Boot","this","input","maxPointers","stage","disableVisibilityChange","scale","pageAlignHorizontally","pageAlignVertically","console","log","width","scaleMode","Phaser","ScaleManager","NO_SCALE","game","state","start","State","Preloader","load","tilemap","Tilemap","TILED_JSON","image","spritesheet","renderer","renderSession","roundPixels","x","y","_super","_this","anchor","setTo","animations","add","physics","enable","body","collideWorldBounds","camera","follow","existing","lastKey","Player","arcade","collide","getCurrentState","walls","enemy1","velocity","set","keyboard","isDown","Keyboard","UP","speed","play","DOWN","LEFT","RIGHT","stop","Sprite","immovable","Enemy1","Debug","startSystem","Physics","ARCADE","map","addTilesetImage","background","createLayer","resizeWorld","setCollision","player","enemy1Sight","sprite","renderable","checkOverlap","A","B","boundsA","getBounds","boundsB","Rectangle","intersects","AUTO","antialias","States.Preloader","States.Debug","States.Boot","Game","window"],"mappings":"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"}